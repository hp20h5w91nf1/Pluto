name: Test
run-name: ðŸ‘· Testing all reactive workflows
on: [pull_request]
env:
  JOLIN_ENVIRONMENT: "test"
jobs:
  job-matrix:
    runs-on: ubuntu-latest
    container: jolincompany/jolin_cloud_cicd:latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: |
          echo matrix=$(julia -e '
            import Pkg
            Pkg.Registry.add("General")
            Pkg.Registry.add(Pkg.RegistrySpec(url="https://github.com/jolin-io/JolinRegistry.jl"))
            Pkg.add("JolinPlutoCICD")
            using JolinPlutoCICD
            print(JolinPlutoCICD.json_common_prefix_common_suffix_and_all_workflow_paths(ARGS[1]))
          ' .) >> "$GITHUB_OUTPUT"

  job-run:
    name: ${{ matrix.workflow_path }}
    runs-on: ubuntu-latest
    container: jolincompany/jolin_cloud_cicd:latest
    needs: job-matrix
    strategy:
      matrix: ${{ fromJSON(needs.job-matrix.outputs.matrix) }}
    permissions:
      id-token: write  # This is required for requesting the JWT
    steps:
    - uses: actions/checkout@v3

    - run: |
        julia -e '
          import Pkg
          Pkg.Registry.add("General")
          Pkg.Registry.add(Pkg.RegistrySpec(url="https://github.com/jolin-io/JolinRegistry.jl"))
          Pkg.add("JolinPlutoCICD")
        '

    # we need to create temporary environment under GITHUB_WORKSPACE, because only files under this directory will be cached
    - run: |
        echo workflow_env=$(julia -e '
          using JolinPlutoCICD
          print(JolinPlutoCICD.create_pluto_env(ARGS[1],
            tempdir_parent=ENV["GITHUB_WORKSPACE"] * "/tmp_envs",
            return_relative_path=true))
        ' "${{ matrix.prefix }}${{ matrix.workflow_path }}${{ matrix.suffix }}") >> "$GITHUB_ENV"

    - uses: actions/cache@v3
      with:
        path: ~/.julia
        key: ${{ runner.os }}-${{ hashFiles(format('{0}/Manifest.toml', env.workflow_env), format('{0}/Project.toml', env.workflow_env)) }}
        restore-keys: ${{ runner.os }}-

    - run: julia --project=$GITHUB_WORKSPACE/$workflow_env -e 'import Pkg; Pkg.instantiate()'

    - working-directory: ./workflows
      run: julia --project=$GITHUB_WORKSPACE/$workflow_env "${{ matrix.prefix }}${{ matrix.workflow_path }}${{ matrix.suffix }}"